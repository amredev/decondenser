package amredev:decondenser;

world decondenser {
    export decondenser: interface {
        unescape: func(input: string) -> string;

        resource decondenser {
            constructor(params: decondenser-params);

            format: func(input: string) -> string;
        }

        record decondenser-params {
            extends: option<preset>,
            indent: option<indent>,
            max-line-size: option<u32>,
            no-break-size: option<u32>,
            groups: option<list<group>>,
            quotes: option<list<quote>>,
            puncts: option<list<punct>>,
        }

        variant preset {
            empty,
            generic,
        }

        variant indent {
            n-spaces(u32),
            str(string),
        }

        record group {
            opening: punct,
            closing: punct,
            break-style: option<break-style>,
        }

        variant break-style {
            consistent,
            compact,
        }

        record punct {
            symbol: string,
            leading-space: option<space>,
            trailing-space: option<space>,
        }

        record space {
            size: option<u32>,
            breakable: option<bool>,
        }

        record quote {
            opening: string,
            closing: string,
        }
    }
}
